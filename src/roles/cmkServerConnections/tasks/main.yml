---
- name: CHECKMK CONNECTIONS DETAILS
  block:
    - name: Initializing runtime connections database
      ansible.builtin.set_fact:
        cmkconnections: "{{ cmkconnections| combine({ 'pattern': '^'+ cmkAgent.region + '_' + cmkAgent.envalias|lower  + '*' }) }}"

    - name: Retrieving connections list from checkmk master server
      local_action:
        module: uri
        url: "{{ cmkAgent.config.apiurl }}/domain-types/site_connection/collections/all"
        method: GET
        headers:
          Content-Type: application/json
          Accept: application/json
          Authorization: "Bearer {{ cmkAgent.config.apiuser }} {{ cmkAgent.config.apikey }}"
      register: cnxResponse
      failed_when: cnxResponse.status >= 400

    - name: Building connection pool based on presets criteria
      ansible.builtin.set_fact:
        cmkconnections: "{{ cmkconnections|combine({ 'pool': (cmkconnections.pool|default([]) + [ item.id ])|unique if item.id is regex(cmkconnections.pattern) and not(item.extensions.status_connection.disable_in_status_gui|bool) else cmkconnections.pool|default([]) }) }}"
      with_items: "{{cnxResponse.json.value}}"
      loop_control:
        label: "Site id: {{ item.id if item.id is regex(cmkconnections.pattern) and not(item.extensions.status_connection.disable_in_status_gui|bool) else item.id + ' Ignored !'}}"
      when:
        - cnxResponse is defined and cnxResponse.status < 400
        - cmkconnections is defined and cmkconnections.pattern|length > 0

    - name: Gathering details on each connection in the pool
      local_action:
        module: uri
        url: "{{ cmkAgent.config.apiurl }}/objects/site_connection/{{ item|lower }}"
        method: GET
        headers:
          Content-Type: application/json
          Accept: application/json
          Authorization: "Bearer {{ cmkAgent.config.apiuser }} {{ cmkAgent.config.apikey }}"
      register: cnxDetailsResponse
      with_items: "{{cmkconnections.pool}}"
      loop_control:
        label: "Retrieving stats on: {{ item }} site"
      failed_when: cnxDetailsResponse.status >= 400
      when:
        - cmkconnections is defined and cmkconnections.pool|length > 0

    - name: Retrieving monitoring proxy hostname for each connection in the pool
      ansible.builtin.set_fact:
        cmkconnections: "{{ cmkconnections|combine({ 'proxies': (cmkconnections.proxies|default([]) + [{ 'site': item.item, 'host': item.json['extensions']['status_connection']['connection']['host'] }])|unique }) }}"
      with_items: "{{cnxDetailsResponse.results}}"
      loop_control:
        label: "Retrieving proxy hostname for: {{ item.item }} site"
      when:
        - cnxDetailsResponse.results is defined and cnxDetailsResponse.results|length > 0


    - name: Gathering agents list for each connection in the pool
      ansible.builtin.shell: |
        set timeout 30
        su -c 'cmk -l' -l {{ item.site }}
      register: cnxAgents
      delegate_to: "{{item.host}}"
      with_items: "{{cmkconnections.proxies}}"
      loop_control:
        label: "Retrieving monitored hosts for '{{ item.site }}' site"
      when:
        - cmkconnections is defined and cmkconnections.proxies|length > 0


    - name: Adding previous result into the runtime connections database
      ansible.builtin.set_fact:
        cmkconnections:  >-
         {{ cmkconnections|combine({ 'activelink': item.0|combine({ 'agents': item.1.stdout_lines,
              'agents_count': item.1.stdout_lines|length
              })
            })
          if cmkconnections.activelink is not defined or
          cmkAgent.hostname in item.1.stdout_lines or
          (
              ( cmkconnections.activelink.agents_count|int > item.1.stdout_lines|length|int ) and
              (cmkAgent.hostname not in cmkconnections.activelink.agents)
          )
          else
          cmkconnections|combine({'activelink': cmkconnections.activelink })
         }}
      loop_control:
        label: "Saving Agents list for: {{ item.0.site }} site into runtime database"
      with_together:
        - "{{ cmkconnections.proxies }}"
        - "{{ cnxAgents.results }}"
      vars:
        cmkEnableTlsEncrytion:  false
      when:
        - cnxAgents is defined and cnxAgents.results|length > 0
        - cmkconnections is defined and cmkconnections.proxies|length > 0


    - name: Retrieving agents Receiver port on selected checkmk proxy server
      ansible.builtin.shell: |
        set timeout 60
        omd config "{{ cmkconnections.activelink.site|lower }}" show|grep -i 'RECEIVER_PORT'|awk -F':' '{print $NF}'| sed 's/[ ][ ]*//g'
      register: cnxReceiverport
      failed_when: cnxReceiverport.rc > 0
      delegate_to: "{{cmkconnections.activelink.host}}"
      when:
        - cmkconnections is defined and cmkconnections.activelink|length > 0


    - name: Adding previous result into the active connection attritbutes
      ansible.builtin.set_fact:
        cmkconnections:  >-
         {{
         cmkconnections|combine({ 'activelink': cmkconnections.activelink|combine({'recvport': cnxReceiverport.stdout}) })
         }}
      when:
        - cmkconnections is defined and cmkconnections.activelink|length > 0
        - cnxReceiverport is defined and cnxReceiverport.stdout|length > 0


    # - name: Print return information from the previous task
    #   ansible.builtin.debug:
    #     var: "{{item}}"
    #   loop:
    #     - cmkconnections.activelink

  when:
    - dburl is defined and dburl|length >0
    - dbtoken is defined and dbtoken|length >0
    - DBQuery is defined and DBQuery.status < 400 and DBQuery.json|length >0
    - cmkAgent is defined and cmkAgent.config|length > 0
  vars:
    cmkconnections: {}
