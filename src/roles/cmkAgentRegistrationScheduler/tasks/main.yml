---
- name: PREPARE CRONTAB MANDATORIES PARAMS
  block:
    - name: Ensure Vault Secret file exists.
      ansible.builtin.lineinfile:
        path: "{{ vaultPasswdFile }}"
        state: present
        line: "{{ vaultPasswd }}"
        owner: root
        group: root
        mode: '0644'
        create: yes
      delegate_to: localhost

    - name: Getting Current system date
      ansible.builtin.shell: |
        set timeout 10
        date -d '2min' +'%Y-%m-%d %H:%M:%S'
      register: currentSystemDate
      failed_when: currentSystemDate.rc > 0
      delegate_to: localhost

    - name: Gathering Agent predicitive registration date
      ansible.builtin.shell: |
        set timeout 10
        date -d '1min' +'%Y-%m-%d %H:%M:%S'
      register: AgentRegistrationDate
      failed_when: AgentRegistrationDate.rc > 0
      delegate_to: localhost

    - name: Parse previous result to retrieve scheduler Parameters
      ansible.builtin.set_fact:
        regYear:    "{{ (AgentRegistrationDate.stdout.split(' ')| first).split('-') | first }}"
        regMonth:   "{{ (AgentRegistrationDate.stdout.split(' ')| first).split('-')[1]      }}"
        regDay:     "{{ (AgentRegistrationDate.stdout.split(' ')| first).split('-') | last  }}"
        regHour:    "{{ (AgentRegistrationDate.stdout.split(' ')| last ).split(':') | first }}"
        regMin:     "{{ (AgentRegistrationDate.stdout.split(' ')| last ).split(':')[1]      }}"
        regSec:     "{{ (AgentRegistrationDate.stdout.split(' ')| last ).split(':') | last  }}"
        currYear:    "{{ (currentSystemDate.stdout.split(' ')| first).split('-') | first }}"
        currMonth:   "{{ (currentSystemDate.stdout.split(' ')| first).split('-')[1]      }}"
        currDay:     "{{ (currentSystemDate.stdout.split(' ')| first).split('-') | last  }}"
        currHour:    "{{ (currentSystemDate.stdout.split(' ')| last ).split(':') | first }}"
        currMin:     "{{ (currentSystemDate.stdout.split(' ')| last ).split(':')[1]      }}"
        currSec:     "{{ (currentSystemDate.stdout.split(' ')| last ).split(':') | last  }}"
      delegate_to: localhost
      when:
        - AgentRegistrationDate is defined and AgentRegistrationDate.rc == 0
        - currentSystemDate is defined and currentSystemDate.rc == 0

    - name: Scheduling CheckMK Agent registration
      ansible.builtin.cron:
        name: CheckMK Agent AutoDeploy
        month:    "{{ regMonth|default(currMonth)|int }}"
        day:      "{{ regDay|default(currDay)|int }}"
        hour:     "{{ regHour|default(currHour)|int }}"
        minute:   "{{ regMin|default(currMin)|int }}"
        user:     root
        job: "sudo ansible-playbook -i {{inventory_hostname_short|lower}}, {{playbook_dir}}/cmkAgent_Deployment.yml --vault-password-file {{ vaultPasswdFile }} >> /var/log/cmkAgentAutoRegistration.log"
        cron_file: "{{ 'ansible' + cmkAgent.hostname|capitalize + '.auto.register.cron' }}"
      become: true
      delegate_to: localhost
      when:
        - AgentRegistrationDate is defined and AgentRegistrationDate.rc == 0
        - currentSystemDate is defined and currentSystemDate.rc == 0
      vars:
        - log_path: /var/log/cmkAgentAutoRegistration.log

  when:
    - dburl is defined and dburl|length >0
    - dbtoken is defined and dbtoken|length >0
    - vaultPasswdFile is defined and vaultPasswdFile|length >0
    - vaultPasswd is defined and vaultPasswd|length >0

# date -d '25hour30min' +'%m-%d-%H:%M'

# 25hour30min
