
- name: DEFINING HOST ATTRIBUTES
  block:
    - name: Gathering host attributes from it known assets
      ansible.builtin.set_fact:
        cmkAgent:
          hostname: "{{ inventory_hostname_short|lower }}"
          environment: "{{ 'production' if DBQuery.json.environment|lower == 'prod' else  ( 'staging' if DBQuery.json.environment|lower == 'stg'  else 'development')  }}"
          envalias: "{{ DBQuery.json.environment|replace('o','')|replace('a','')|lower if DBQuery.json.environment else 'dev' }}"
          infra: "{{DBQuery.json.infraversion|default('iv2')|upper }}"
          serial: "{{DBQuery.json.serial|default('unknown')|upper }}"
          systemtype: "{{DBQuery.json.systemtype|default('virtual')|lower }}"
          respool: "{{DBQuery.json.vpic_pool|default('')|lower }}"
          country: "{{DBQuery.json.country_iso|default('unknown')|lower }}"
          application: "{{DBQuery.json.applications|lower if DBQuery.json.applications else 'unknown' }}"
          datacenter: "{{DBQuery.json.datacenter|default('')}}"
          ecosystem: "{{DBQuery.json.ecosystem|lower }}"
          scope: "{{DBQuery.json.perimeter|lower|replace('internet','dmzi')|replace('vdc','mzr')|replace('vpc','dmzr')|replace('vcs','icp')|replace('unknown','none')|replace('amm','none') if DBQuery.json.perimeter else 'none' }}"
          vendor: "{{DBQuery.json.manufacturer|default('unknown')|lower}}"
          region: "{{DBQuery.json.area|default('emea')|lower }}"
          osfamily: "{{DBQuery.json.osfamily|default('linux')|lower}}"
          ipaddress: "{{DBQuery.json.ipaddress|default('unknown')}}"
          fqdn: "{{DBQuery.json.fqdn|default('unknown')|lower}}"
          vmtype: "{{DBQuery.json.vmtype|default('unknown')|lower}}"
          model: "{{DBQuery.json.model|default('unknown')|lower}}"
          networkip: "{{DBQuery.json.netip|default('unknown')|lower}}"
          netmask: "{{DBQuery.json.netmask|default('unknown')|lower}}"
          vlanid: "{{DBQuery.json.networkid|default('unknown')|lower}}"
          networkname: "{{DBQuery.json.networkname|default('unknown')|lower}}"
          cibdepartement: "{{DBQuery.json.snowcib_department|default('unknown')|lower}}"
          cibsupportgroup: "{{DBQuery.json.snowcib_supportgroup|default('unknown')|lower}}"
          itgassgmtgroup: "{{DBQuery.json.snowitg_assignment_group|default('unknown')|lower}}"
          itgdepartement: "{{DBQuery.json.snowitg_department|default('unknown')|lower}}"
          itgmgmtgroup: "{{DBQuery.json.snowitg_managed_by_group|default('unknown')|lower}}"
          itgsupportgroup: "{{DBQuery.json.snowitg_supportgroup|default('unknown')|lower}}"

    - name: Normalizing some critical attributes
      ansible.builtin.set_fact:
        cmkAgent: "{{ cmkAgent|combine({
          'scope': 'none'  if cmkAgent.scope not in scopes else cmkAgent.scope,
          'envalias': 'dev'  if cmkAgent.envalias not in criticalities else cmkAgent.envalias,
          'stretch': 'true' if cmkAgent.respool == 'dr' else 'false',
          'datacenter': 'Shared-Dc' if cmkAgent.respool|lower == 'dr' else (cmkAgent.datacenter if cmkAgent.datacenter|length >0 else 'No-Dc')
          }) }}"
      when:
        - cmkAgent is defined and cmkAgent|length >0
        - criticalities is defined and criticalities|length >0

    - name: Retrieving CHECKMK Rest API parameters based on host environment
      ansible.builtin.set_fact:
        cmkAgent: "{{ cmkAgent|combine({ 'config': {
          'sitepath':    item.sitepath    |default(checkmkParams.default.sitepath),
          'admuser':     item.admuser     |default(checkmkParams.default.admuser),
          'admpasswd':   item.admpasswd   |default(checkmkParams.default.admpasswd),
          'server':      (item.zoneparams|selectattr('region', 'defined')|selectattr('region','match','(?i)' + DBQuery.json.area)|map(attribute='server'))|default(checkmkParams.default.zoneparams|selectattr('region', 'defined')|selectattr('region','match','(?i)' + DBQuery.json.area|default('emea'))|map(attribute='server')) |list|join,
          'mainsite':    item.sitename    |default(checkmkParams.default.sitename),
          'apiuser':     item.apiuser     |default(checkmkParams.default.apiuser),
          'apikey':      item.apikey      |default(checkmkParams.default.apikey),
          'apiversion':  item.apiversion  |default(checkmkParams.default.apiversion),
          'protocol':    item.protocol    |default(checkmkParams.default.protocol) }
          })  if item.name|lower == cmkAgent.envalias|lower else cmkAgent }}"
      with_items: "{{checkmkParams.environment}}"
      loop_control:
        label: "gathering checkmk API Parameters for: {{ item.name if item.name|lower == cmkAgent.envalias|lower else item.name + ' skiping !'  }}"
      when:
        - cmkAgent is defined and cmkAgent|length > 0
        - checkmkParams is defined and checkmkParams.environment|length > 0 and checkmkParams.default|length > 0

    - name: Saving previous data into the runtime config collection
      ansible.builtin.set_fact:
        cmkAgent: "{{ cmkAgent|combine({ 'config': cmkAgent.config | combine({
          'baseurl':    cmkAgent.config.protocol + '://' + cmkAgent.config.server + '/' + cmkAgent.config.mainsite ,
          'apiurl':     cmkAgent.config.protocol + '://' + cmkAgent.config.server + '/' + cmkAgent.config.mainsite + '/check_mk/api/' + cmkAgent.config.apiversion|default('1.0'),
          'watopath':   cmkAgent.config.sitepath + '/' + cmkAgent.config.mainsite + '/etc/check_mk/conf.d/wato',
          'dstfolder':  cmkAgent.region|upper + '/' + cmkAgent.datacenter|capitalize + '/' + cmkAgent.environment|capitalize + '/' + cmkAgent.scope|capitalize + '/' + cmkAgent.systemtype|capitalize })
          }) }}"
      when: cmkAgent is defined and cmkAgent.config|length > 0

  when:
    - dburl is defined and dburl|length >0
    - dbtoken is defined and dbtoken|length >0
    - DBQuery is defined and DBQuery.status < 400 and DBQuery.json|length >0

